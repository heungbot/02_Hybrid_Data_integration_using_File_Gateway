[0m[1mmodule.heungbot-s3.data.aws_s3_bucket.bucket: Reading...[0m[0m
[0m[1mmodule.heungbot-s3.data.aws_s3_bucket.bucket: Read complete after 0s [id=heungbot-db-snapshot-demo][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.heungbot-s3.aws_s3_bucket_lifecycle_configuration.lifecycle[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "lifecycle" {
      [32m+[0m[0m bucket = "heungbot-db-snapshot-demo"
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "heungbot-sgw-data-rule"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "storage-gateway/"
            }

          [32m+[0m[0m noncurrent_version_transition {
              [32m+[0m[0m noncurrent_days = 365
              [32m+[0m[0m storage_class   = "STANDARD_IA"
            }
          [32m+[0m[0m noncurrent_version_transition {
              [32m+[0m[0m noncurrent_days = 730
              [32m+[0m[0m storage_class   = "GLACIER"
            }
        }
    }

[1m  # module.heungbot-s3.aws_s3_bucket_versioning.versioning[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "versioning" {
      [32m+[0m[0m bucket = "heungbot-db-snapshot-demo"
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.heungbot-storage-gw.aws_iam_policy.file-share-policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "file-share-policy" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "file-share-role-policy"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "s3:GetAccelerateConfiguration",
                          [32m+[0m[0m "s3:GetBucketLocation",
                          [32m+[0m[0m "s3:GetBucketVersioning",
                          [32m+[0m[0m "s3:ListBucket",
                          [32m+[0m[0m "s3:ListBucketVersions",
                          [32m+[0m[0m "s3:ListBucketMultipartUploads",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:s3:::heungbot-db-snapshot-demo"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "s3:AbortMultipartUpload",
                          [32m+[0m[0m "s3:DeleteObject",
                          [32m+[0m[0m "s3:DeleteObjectVersion",
                          [32m+[0m[0m "s3:GetObject",
                          [32m+[0m[0m "s3:GetObjectAcl",
                          [32m+[0m[0m "s3:GetObjectVersion",
                          [32m+[0m[0m "s3:ListMultipartUploadParts",
                          [32m+[0m[0m "s3:PutObject",
                          [32m+[0m[0m "s3:PutObjectAcl",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:s3:::heungbot-db-snapshot-demo/storage-gateway/*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id   = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # module.heungbot-storage-gw.aws_iam_role.file-share-role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "file-share-role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "storagegateway.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = ""
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "file_share_role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m role_last_used        = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name" = "heungbot-sgw-file-share-role"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name" = "heungbot-sgw-file-share-role"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.heungbot-storage-gw.aws_iam_role_policy_attachment.attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "attachment" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "file_share_role"
    }

[1m  # module.heungbot-storage-gw.aws_storagegateway_cache.cache-volume[0m will be created
[0m  [32m+[0m[0m resource "aws_storagegateway_cache" "cache-volume" {
      [32m+[0m[0m disk_id     = "test"
      [32m+[0m[0m gateway_arn = (known after apply)
      [32m+[0m[0m id          = (known after apply)
    }

[1m  # module.heungbot-storage-gw.aws_storagegateway_gateway.main[0m will be created
[0m  [32m+[0m[0m resource "aws_storagegateway_gateway" "main" {
      [32m+[0m[0m activation_key            = (known after apply)
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m ec2_instance_id           = (known after apply)
      [32m+[0m[0m endpoint_type             = (known after apply)
      [32m+[0m[0m gateway_id                = (known after apply)
      [32m+[0m[0m gateway_ip_address        = "1.2.3.4"
      [32m+[0m[0m gateway_name              = "heungbot-storage-gateway"
      [32m+[0m[0m gateway_network_interface = (known after apply)
      [32m+[0m[0m gateway_timezone          = "GMT"
      [32m+[0m[0m gateway_type              = "FILE_S3"
      [32m+[0m[0m gateway_vpc_endpoint      = (known after apply)
      [32m+[0m[0m host_environment          = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m smb_security_strategy     = (known after apply)
      [32m+[0m[0m tags                      = {
          [32m+[0m[0m "Name" = "heungbot-sgw-heungbot-storage-gateway"
        }
      [32m+[0m[0m tags_all                  = {
          [32m+[0m[0m "Name" = "heungbot-sgw-heungbot-storage-gateway"
        }
    }

[1m  # module.heungbot-storage-gw.aws_storagegateway_nfs_file_share.nfs[0m will be created
[0m  [32m+[0m[0m resource "aws_storagegateway_nfs_file_share" "nfs" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m bucket_region           = "ap-northeast-2"
      [32m+[0m[0m client_list             = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m default_storage_class   = "S3_STANDARD"
      [32m+[0m[0m file_share_name         = "heungbot-file-share"
      [32m+[0m[0m fileshare_id            = (known after apply)
      [32m+[0m[0m gateway_arn             = (known after apply)
      [32m+[0m[0m guess_mime_type_enabled = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kms_encrypted           = false
      [32m+[0m[0m location_arn            = "arn:aws:s3:::heungbot-db-snapshot-demo/storage-gateway/"
      [32m+[0m[0m notification_policy     = jsonencode({})
      [32m+[0m[0m object_acl              = "private"
      [32m+[0m[0m path                    = (known after apply)
      [32m+[0m[0m read_only               = false
      [32m+[0m[0m requester_pays          = false
      [32m+[0m[0m role_arn                = (known after apply)
      [32m+[0m[0m squash                  = "RootSquash"
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "heungbot-sgw-heungbot-file-share"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name" = "heungbot-sgw-heungbot-file-share"
        }
      [32m+[0m[0m vpc_endpoint_dns_name   = (known after apply)

      [32m+[0m[0m nfs_file_share_defaults {
          [32m+[0m[0m directory_mode = "0777"
          [32m+[0m[0m file_mode      = "0666"
          [32m+[0m[0m group_id       = "65534"
          [32m+[0m[0m owner_id       = "65534"
        }
    }

[1m  # module.heungbot-vpc.aws_route_table.private[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "heungbot-sgw-routing-table-private"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "heungbot-sgw-routing-table-private"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_security_group.interface-endpoint-sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "interface-endpoint-sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "20.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 1026
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 1028
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "20.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 1031
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 1031
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "20.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 2222
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 2222
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "20.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
        ]
      [32m+[0m[0m name                   = "interface-endpoint-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "heungbot-sgw-interface-endpoint-sg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "heungbot-sgw-interface-endpoint-sg"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-northeast-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "20.0.128.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "heungbot-sgw-private-subnet-1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "heungbot-sgw-private-subnet-1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "20.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "heungbot-sgw-vpc"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "heungbot-sgw-vpc"
        }
    }

[1m  # module.heungbot-vpc.aws_vpc_endpoint.s3[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "s3" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = false
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.ap-northeast-2.s3"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name" = "heungbot-sgw-s3-gateway-endpoint"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name" = "heungbot-sgw-s3-gateway-endpoint"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_vpc_endpoint.storage-gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "storage-gateway" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.ap-northeast-2.storagegateway"
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name" = "heungbot-sgw-storage-gateway-interface-endpoint"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name" = "heungbot-sgw-storage-gateway-interface-endpoint"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)
    }

[1m  # module.heungbot-vpc.aws_vpc_endpoint_route_table_association.s3-route[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint_route_table_association" "s3-route" {
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m route_table_id  = (known after apply)
      [32m+[0m[0m vpc_endpoint_id = (known after apply)
    }

[1mPlan:[0m 16 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
